<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 将业务类注入IOC容器 -->
    <bean id="person" class="xml.AOP.Person"></bean>

    <!-- 将切面类注入IOC容器 -->
    <bean id="aspectClass" class="xml.AOP.AspectClass"></bean>

    <!-- 开启AOP功能 -->
    <aop:aspectj-autoproxy/>

    <!-- AOP的配置 -->
    <aop:config>
        <!-- 声明一个切面,并指定切面处理类 -->
        <aop:aspect id="aspectClass" ref="aspectClass">
            <!-- 声明一个可重用的切点 -->
            <aop:pointcut id="log" expression="execution(* hello(..))"></aop:pointcut>

            <!-- 指定前置通知要调用的方法 -->
            <aop:before method="beforeLog" pointcut-ref="log"></aop:before>
            <!-- 指定后置通知要调用的方法 -->
            <aop:after method="afterLog" pointcut="execution(* hello(..))"></aop:after>

            <!-- 指定环绕通知要调用的方法 -->
            <!-- 发现一个问题:如果使用环绕通知后,则返回通知将无法获取到返回值(所以推荐使用前置通知和后置通知) -->
            <!--<aop:around method="aroundLog" pointcut-ref="log" arg-names="pjp"></aop:around>-->

            <!-- 指定返回通知要调用的方法 -->
            <!-- 不获取返回值 -->
            <!--<aop:after-returning method="afterReturningLog" pointcut-ref="log"></aop:after-returning>-->
            <!-- 需要获取返回值 -->
            <aop:after-returning method="afterReturningLog" returning="retVal" pointcut-ref="log"></aop:after-returning>

            <!-- 指定异常通知要调用的方法 -->
            <!-- 不获取异常信息 -->
            <!--<aop:after-throwing method="afterThrowingLog" pointcut-ref="log"></aop:after-throwing>-->
            <!-- 需要获取异常信息 -->
            <aop:after-throwing method="afterThrowingLog" throwing="ex" pointcut-ref="log"></aop:after-throwing>
        </aop:aspect>
    </aop:config>
</beans>